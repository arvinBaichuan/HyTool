package com.baichuan.hy.tool.ui.form.func;

import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import com.baichuan.hy.tool.ui.Style;
import com.baichuan.hy.tool.ui.frame.HttpResultFrame;
import com.baichuan.hy.tool.util.ScrollUtil;
import com.baichuan.hy.tool.util.UndoUtil;
import lombok.Getter;

import javax.swing.*;
import java.awt.*;
import java.awt.event.KeyEvent;

/**
 * <pre>
 * HttpResultForm
 * </pre>
 *
 * @author <a href="https://github.com/arvinBaichuan">arvin</a>
 * @since 2019/7/19.
 */
@Getter
public class HttpResultForm {
    private JTabbedPane tabbedPane2;
    private JPanel httpResultPanel;
    private JScrollPane httpResultScrollPane;
    private JTextArea responseBodyTextArea;
    private JTextArea headersTextArea;
    private JTextArea cookiesTextArea;

    private static HttpResultForm httpResultForm;

    private HttpResultForm() {
        ScrollUtil.smoothPane(this.getHttpResultScrollPane());

        Style.blackTextArea(responseBodyTextArea);
        Style.blackTextArea(headersTextArea);
        Style.blackTextArea(cookiesTextArea);

        this.getHttpResultPanel().registerKeyboardAction(e -> HttpResultFrame.getInstance().dispose(), KeyStroke.getKeyStroke(KeyEvent.VK_ESCAPE, 0), JComponent.WHEN_IN_FOCUSED_WINDOW);
    }

    public static HttpResultForm getInstance() {
        if (httpResultForm == null) {
            httpResultForm = new HttpResultForm();
            UndoUtil.register(httpResultForm);
        }
        return httpResultForm;
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        httpResultPanel = new JPanel();
        httpResultPanel.setLayout(new GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        tabbedPane2 = new JTabbedPane();
        httpResultPanel.add(tabbedPane2, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, new Dimension(200, 200), null, 0, false));
        final JPanel panel1 = new JPanel();
        panel1.setLayout(new GridLayoutManager(1, 1, new Insets(12, 12, 12, 12), -1, -1));
        tabbedPane2.addTab("Body", panel1);
        httpResultScrollPane = new JScrollPane();
        panel1.add(httpResultScrollPane, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        responseBodyTextArea = new JTextArea();
        httpResultScrollPane.setViewportView(responseBodyTextArea);
        final JPanel panel2 = new JPanel();
        panel2.setLayout(new GridLayoutManager(1, 1, new Insets(12, 12, 12, 12), -1, -1));
        tabbedPane2.addTab("Headers", panel2);
        final JScrollPane scrollPane1 = new JScrollPane();
        panel2.add(scrollPane1, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        headersTextArea = new JTextArea();
        scrollPane1.setViewportView(headersTextArea);
        final JPanel panel3 = new JPanel();
        panel3.setLayout(new GridLayoutManager(1, 1, new Insets(12, 12, 12, 12), -1, -1));
        tabbedPane2.addTab("Cookies", panel3);
        final JScrollPane scrollPane2 = new JScrollPane();
        panel3.add(scrollPane2, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        cookiesTextArea = new JTextArea();
        scrollPane2.setViewportView(cookiesTextArea);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return httpResultPanel;
    }

}
